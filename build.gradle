allprojects {
    group = "edu.cursor"
    version = "1.0"
}

subprojects {
    apply plugin: "java"
    apply plugin: "maven-publish"

    sourceCompatibility = "17"
    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"
    javadoc.options.encoding = "UTF-8"

    repositories {
        mavenCentral()
    }

    ext.versions = [
        lombok: "1.18.24",
        slf4j: "2.0.5",
        logback: "1.4.5",
        junit5: "5.9.1",
        assertj: "3.23.1",
        mockito: "4.9.0",
        jacoco: "0.8.8",

        mysql: "8.0.31",
        pgsql: "42.5.1",
        mongo: "3.12.11",
        oracle: "19.17.0.0",

        spring: "6.0.2",
        spring_boot: "3.0.0",

        guava: "31.1-jre",
        validation: "3.0.2",
        annotation: "2.1.1",
        modelmapper: "3.1.1",
        mapstruct: "1.5.3.Final",
    ]

    ext.libraries = [
        lombok: "org.projectlombok:lombok:${versions.lombok}",
        slf4j_api: "org.slf4j:slf4j-api:${versions.slf4j}",
        logback_core: "ch.qos.logback:logback-core:${versions.logback}",
        logback_classic: "ch.qos.logback:logback-classic:${versions.logback}",
        junit5_core: "org.junit.jupiter:junit-jupiter:${versions.junit5}",
        junit5_api: "org.junit.jupiter:junit-jupiter-api:${versions.junit5}",
        junit5_params: "org.junit.jupiter:junit-jupiter-params:${versions.junit5}",
        assertj_core: "org.assertj:assertj-core:${versions.assertj}",
        mockito_core: "org.mockito:mockito-core:${versions.mockito}",
        jacoco: "org.jacoco:org.jacoco.agent:${versions.jacoco}",

        mysql: "com.mysql:mysql-connector-j:${versions.mysql}",
        pgsql: "org.postgresql:postgresql:${versions.pgsql}",
        mongo: "org.mongodb:mongo-java-driver:${versions.mongo}",
        oracle: "com.oracle.database.jdbc:ojdbc10:${versions.oracle}",

        spring_core: "org.springframework:spring-core:${versions.spring}",
        spring_beans: "org.springframework:spring-beans:${versions.spring}",
        spring_context: "org.springframework:spring-context:${versions.spring}",
        spring_boot_starter_web: "org.springframework.boot:spring-boot-starter-web:${versions.spring_boot}",
        spring_boot_starter_test: "org.springframework.boot:spring-boot-starter-test:${versions.spring_boot}",
        spring_boot_starter_jpa: "org.springframework.boot:spring-boot-starter-data-jpa:${versions.spring_boot}",
        spring_boot_starter_validation: "org.springframework.boot:spring-boot-starter-validation:${versions.spring_boot}",

        guava: "com.google.guava:guava:${versions.guava}",
        validation: "jakarta.validation:jakarta.validation-api:${versions.validation}",
        annotation: "jakarta.annotation:jakarta.annotation-api:${versions.annotation}",
        modelmapper: "org.modelmapper:modelmapper:${versions.modelmapper}",
        mapstruct: "org.mapstruct:mapstruct:${versions.mapstruct}",
    ]
}
